crystal_doc_search_index_callback({"repository_name":"Cosmo","body":"![build](https://github.com/R-unic/cosmo/actions/workflows/crystal.yml/badge.svg)\n# Cosmo\n\nCosmo is a statically-typed programming language written in pure Crystal.\n\n## Installation\n\n1. Install [Crystal](https://crystal-lang.org/install/).\n2. Run `sudo make install`.\n3. Assert everything is working by running `cosmo -h`\n\n## Contributing\n\n1. Fork it (<https://github.com/R-unic/cosmo/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [R-unic](https://github.com/R-unic) - creator and maintainer\n","program":{"html_id":"Cosmo/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"ancestors":[{"html_id":"Cosmo/Cosmo/AST","kind":"module","full_name":"Cosmo::AST","name":"AST"}],"locations":[],"repository_name":"Cosmo","program":true,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"Cosmo/Cosmo/AST","kind":"module","full_name":"Cosmo::AST","name":"AST"}],"extended_modules":[{"html_id":"Cosmo/Cosmo/AST","kind":"module","full_name":"Cosmo::AST","name":"AST"}],"types":[{"html_id":"Cosmo/Cosmo","path":"Cosmo.html","kind":"module","full_name":"Cosmo","name":"Cosmo","abstract":false,"locations":[{"filename":"src/cosmo.cr","line_number":6,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo.cr#L6"},{"filename":"src/cosmo/logger.cr","line_number":1,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/logger.cr#L1"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"class_methods":[{"html_id":"read_file(path:String)-class-method","name":"read_file","doc":"Reads a file at `path` and returns it's contents","summary":"<p>Reads a file at <code>path</code> and returns it's contents</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(path : String)","args_html":"(path : String)","location":{"filename":"src/cosmo.cr","line_number":29,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo.cr#L29"},"def":{"name":"read_file","args":[{"name":"path","external_name":"path","restriction":"String"}],"visibility":"Public","body":"begin\n  contents = File.read(path)\n  read_source(contents, file_path: path)\nrescue e : Exception\n  raise(\"Failed to read file \\\"#{path}\\\": #{e}\")\n  exit(1)\nend"}},{"html_id":"read_line:String|Nil-class-method","name":"read_line","abstract":false,"location":{"filename":"src/cosmo.cr","line_number":39,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo.cr#L39"},"def":{"name":"read_line","return_type":"String | ::Nil","visibility":"Public","body":"Readline.readline(\"âž¤ \", add_history: true)"}},{"html_id":"read_source(source:String,file_path:String):LiteralType-class-method","name":"read_source","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"String"},{"name":"file_path","external_name":"file_path","restriction":"String"}],"args_string":"(source : String, file_path : String) : LiteralType","args_html":"(source : String, file_path : String) : <a href=\"LiteralType.html\">LiteralType</a>","location":{"filename":"src/cosmo.cr","line_number":24,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo.cr#L24"},"def":{"name":"read_source","args":[{"name":"source","external_name":"source","restriction":"String"},{"name":"file_path","external_name":"file_path","restriction":"String"}],"return_type":"LiteralType","visibility":"Public","body":"@@interpreter.interpret(source, file_path)"}},{"html_id":"run_repl-class-method","name":"run_repl","doc":"Starts the REPL","summary":"<p>Starts the REPL</p>","abstract":false,"location":{"filename":"src/cosmo.cr","line_number":44,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo.cr#L44"},"def":{"name":"run_repl","visibility":"Public","body":"puts(\"Welcome to the Cosmo REPL\")\nloop do\n  line = read_line\n  if line.nil?\n    break\n  end\n  puts(read_source(line, file_path: \"repl\"))\nend\n"}}],"types":[{"html_id":"Cosmo/Cosmo/AST","path":"Cosmo/AST.html","kind":"module","full_name":"Cosmo::AST","name":"AST","abstract":false,"locations":[{"filename":"src/cosmo/syntax/parser/ast.cr","line_number":1,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast.cr#L1"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"Cosmo/Cosmo/AST/Expression","kind":"module","full_name":"Cosmo::AST::Expression","name":"Expression"}],"namespace":{"html_id":"Cosmo/Cosmo","kind":"module","full_name":"Cosmo","name":"Cosmo"},"types":[{"html_id":"Cosmo/Cosmo/AST/Expression","path":"Cosmo/AST/Expression.html","kind":"module","full_name":"Cosmo::AST::Expression","name":"Expression","abstract":false,"ancestors":[{"html_id":"Cosmo/Cosmo/AST","kind":"module","full_name":"Cosmo::AST","name":"AST"}],"locations":[{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":1,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L1"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"Cosmo/Cosmo/AST","kind":"module","full_name":"Cosmo::AST","name":"AST"}],"namespace":{"html_id":"Cosmo/Cosmo/AST","kind":"module","full_name":"Cosmo::AST","name":"AST"},"types":[{"html_id":"Cosmo/Cosmo/AST/Expression/BinaryOp","path":"Cosmo/AST/Expression/BinaryOp.html","kind":"class","full_name":"Cosmo::AST::Expression::BinaryOp","name":"BinaryOp","abstract":false,"superclass":{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},"ancestors":[{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":40,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L40"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo/AST/Expression","kind":"module","full_name":"Cosmo::AST::Expression","name":"Expression"},"constructors":[{"html_id":"new(left:Cosmo::AST::Node,operator:Cosmo::Token,right:Cosmo::AST::Node)-class-method","name":"new","abstract":false,"args":[{"name":"left","external_name":"left","restriction":"::Cosmo::AST::Node"},{"name":"operator","external_name":"operator","restriction":"::Cosmo::Token"},{"name":"right","external_name":"right","restriction":"::Cosmo::AST::Node"}],"args_string":"(left : Cosmo::AST::Node, operator : Cosmo::Token, right : Cosmo::AST::Node)","args_html":"(left : <a href=\"../../../Cosmo/AST/Node.html\">Cosmo::AST::Node</a>, operator : <a href=\"../../../Cosmo/Token.html\">Cosmo::Token</a>, right : <a href=\"../../../Cosmo/AST/Node.html\">Cosmo::AST::Node</a>)","location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":45,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L45"},"def":{"name":"new","args":[{"name":"left","external_name":"left","restriction":"::Cosmo::AST::Node"},{"name":"operator","external_name":"operator","restriction":"::Cosmo::Token"},{"name":"right","external_name":"right","restriction":"::Cosmo::AST::Node"}],"visibility":"Public","body":"_ = allocate\n_.initialize(left, operator, right)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"left:Node-instance-method","name":"left","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":41,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L41"},"def":{"name":"left","return_type":"Node","visibility":"Public","body":"@left"}},{"html_id":"operator:Token-instance-method","name":"operator","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":42,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L42"},"def":{"name":"operator","return_type":"Token","visibility":"Public","body":"@operator"}},{"html_id":"right:Node-instance-method","name":"right","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":43,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L43"},"def":{"name":"right","return_type":"Node","visibility":"Public","body":"@right"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a nicely readable and concise string representation of this object,\ntypically intended for users.\n\nThis method should usually **not** be overridden. It delegates to\n`#to_s(IO)` which can be overridden for custom implementations.\n\nAlso see `#inspect`.","summary":"<p>Returns a nicely readable and concise string representation of this object, typically intended for users.</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":48,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L48"},"def":{"name":"to_s","visibility":"Public","body":"\"Binary<left: #{@left.to_s}, operator: #{@operator}, right: #{@right.to_s}>\""}}]},{"html_id":"Cosmo/Cosmo/AST/Expression/BooleanLiteral","path":"Cosmo/AST/Expression/BooleanLiteral.html","kind":"class","full_name":"Cosmo::AST::Expression::BooleanLiteral","name":"BooleanLiteral","abstract":false,"superclass":{"html_id":"Cosmo/Cosmo/AST/Expression/Literal","kind":"class","full_name":"Cosmo::AST::Expression::Literal","name":"Literal"},"ancestors":[{"html_id":"Cosmo/Cosmo/AST/Expression/Literal","kind":"class","full_name":"Cosmo::AST::Expression::Literal","name":"Literal"},{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":98,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L98"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo/AST/Expression","kind":"module","full_name":"Cosmo::AST::Expression","name":"Expression"},"constructors":[{"html_id":"new(value:Bool)-class-method","name":"new","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : Bool)","location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":99,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L99"},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a nicely readable and concise string representation of this object,\ntypically intended for users.\n\nThis method should usually **not** be overridden. It delegates to\n`#to_s(IO)` which can be overridden for custom implementations.\n\nAlso see `#inspect`.","summary":"<p>Returns a nicely readable and concise string representation of this object, typically intended for users.</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":100,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L100"},"def":{"name":"to_s","visibility":"Public","body":"\"Literal<#{value}>\""}}]},{"html_id":"Cosmo/Cosmo/AST/Expression/CharLiteral","path":"Cosmo/AST/Expression/CharLiteral.html","kind":"class","full_name":"Cosmo::AST::Expression::CharLiteral","name":"CharLiteral","abstract":false,"superclass":{"html_id":"Cosmo/Cosmo/AST/Expression/Literal","kind":"class","full_name":"Cosmo::AST::Expression::Literal","name":"Literal"},"ancestors":[{"html_id":"Cosmo/Cosmo/AST/Expression/Literal","kind":"class","full_name":"Cosmo::AST::Expression::Literal","name":"Literal"},{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":77,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L77"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo/AST/Expression","kind":"module","full_name":"Cosmo::AST::Expression","name":"Expression"},"constructors":[{"html_id":"new(value:Char)-class-method","name":"new","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Char"}],"args_string":"(value : Char)","args_html":"(value : Char)","location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":78,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L78"},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"Char"}],"visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a nicely readable and concise string representation of this object,\ntypically intended for users.\n\nThis method should usually **not** be overridden. It delegates to\n`#to_s(IO)` which can be overridden for custom implementations.\n\nAlso see `#inspect`.","summary":"<p>Returns a nicely readable and concise string representation of this object, typically intended for users.</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":79,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L79"},"def":{"name":"to_s","visibility":"Public","body":"\"Literal<'#{value}'>\""}}]},{"html_id":"Cosmo/Cosmo/AST/Expression/FloatLiteral","path":"Cosmo/AST/Expression/FloatLiteral.html","kind":"class","full_name":"Cosmo::AST::Expression::FloatLiteral","name":"FloatLiteral","abstract":false,"superclass":{"html_id":"Cosmo/Cosmo/AST/Expression/Literal","kind":"class","full_name":"Cosmo::AST::Expression::Literal","name":"Literal"},"ancestors":[{"html_id":"Cosmo/Cosmo/AST/Expression/Literal","kind":"class","full_name":"Cosmo::AST::Expression::Literal","name":"Literal"},{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":91,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L91"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo/AST/Expression","kind":"module","full_name":"Cosmo::AST::Expression","name":"Expression"},"constructors":[{"html_id":"new(value:Float64|Float32|Float16|Float8)-class-method","name":"new","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Float64 | Float32 | Float16 | Float8"}],"args_string":"(value : Float64 | Float32 | Float16 | Float8)","args_html":"(value : Float64 | Float32 | Float16 | Float8)","location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":92,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L92"},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"Float64 | Float32 | Float16 | Float8"}],"visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a nicely readable and concise string representation of this object,\ntypically intended for users.\n\nThis method should usually **not** be overridden. It delegates to\n`#to_s(IO)` which can be overridden for custom implementations.\n\nAlso see `#inspect`.","summary":"<p>Returns a nicely readable and concise string representation of this object, typically intended for users.</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":93,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L93"},"def":{"name":"to_s","visibility":"Public","body":"\"Literal<#{value}>\""}}]},{"html_id":"Cosmo/Cosmo/AST/Expression/IntLiteral","path":"Cosmo/AST/Expression/IntLiteral.html","kind":"class","full_name":"Cosmo::AST::Expression::IntLiteral","name":"IntLiteral","abstract":false,"superclass":{"html_id":"Cosmo/Cosmo/AST/Expression/Literal","kind":"class","full_name":"Cosmo::AST::Expression::Literal","name":"Literal"},"ancestors":[{"html_id":"Cosmo/Cosmo/AST/Expression/Literal","kind":"class","full_name":"Cosmo::AST::Expression::Literal","name":"Literal"},{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":84,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L84"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo/AST/Expression","kind":"module","full_name":"Cosmo::AST::Expression","name":"Expression"},"constructors":[{"html_id":"new(value:Int64|Int32|Int16|Int8)-class-method","name":"new","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int64 | Int32 | Int16 | Int8"}],"args_string":"(value : Int64 | Int32 | Int16 | Int8)","args_html":"(value : Int64 | Int32 | Int16 | Int8)","location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":85,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L85"},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"Int64 | Int32 | Int16 | Int8"}],"visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a nicely readable and concise string representation of this object,\ntypically intended for users.\n\nThis method should usually **not** be overridden. It delegates to\n`#to_s(IO)` which can be overridden for custom implementations.\n\nAlso see `#inspect`.","summary":"<p>Returns a nicely readable and concise string representation of this object, typically intended for users.</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":86,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L86"},"def":{"name":"to_s","visibility":"Public","body":"\"Literal<#{value}>\""}}]},{"html_id":"Cosmo/Cosmo/AST/Expression/Literal","path":"Cosmo/AST/Expression/Literal.html","kind":"class","full_name":"Cosmo::AST::Expression::Literal","name":"Literal","abstract":true,"superclass":{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},"ancestors":[{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":65,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L65"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"Cosmo/Cosmo/AST/Expression/BooleanLiteral","kind":"class","full_name":"Cosmo::AST::Expression::BooleanLiteral","name":"BooleanLiteral"},{"html_id":"Cosmo/Cosmo/AST/Expression/CharLiteral","kind":"class","full_name":"Cosmo::AST::Expression::CharLiteral","name":"CharLiteral"},{"html_id":"Cosmo/Cosmo/AST/Expression/FloatLiteral","kind":"class","full_name":"Cosmo::AST::Expression::FloatLiteral","name":"FloatLiteral"},{"html_id":"Cosmo/Cosmo/AST/Expression/IntLiteral","kind":"class","full_name":"Cosmo::AST::Expression::IntLiteral","name":"IntLiteral"},{"html_id":"Cosmo/Cosmo/AST/Expression/NoneLiteral","kind":"class","full_name":"Cosmo::AST::Expression::NoneLiteral","name":"NoneLiteral"},{"html_id":"Cosmo/Cosmo/AST/Expression/StringLiteral","kind":"class","full_name":"Cosmo::AST::Expression::StringLiteral","name":"StringLiteral"}],"namespace":{"html_id":"Cosmo/Cosmo/AST/Expression","kind":"module","full_name":"Cosmo::AST::Expression","name":"Expression"},"constructors":[{"html_id":"new(value:Bool|Char|Float32|Float64|Int16|Int32|Int64|Int8|String|Nil)-class-method","name":"new","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"::Bool | ::Char | ::Float32 | ::Float64 | ::Int16 | ::Int32 | ::Int64 | ::Int8 | ::String | ::Nil"}],"args_string":"(value : Bool | Char | Float32 | Float64 | Int16 | Int32 | Int64 | Int8 | String | Nil)","args_html":"(value : Bool | Char | Float32 | Float64 | Int16 | Int32 | Int64 | Int8 | String | Nil)","location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":67,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L67"},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"::Bool | ::Char | ::Float32 | ::Float64 | ::Int16 | ::Int32 | ::Int64 | ::Int8 | ::String | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"value:LiteralType-instance-method","name":"value","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":66,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L66"},"def":{"name":"value","return_type":"LiteralType","visibility":"Public","body":"@value"}}]},{"html_id":"Cosmo/Cosmo/AST/Expression/NoneLiteral","path":"Cosmo/AST/Expression/NoneLiteral.html","kind":"class","full_name":"Cosmo::AST::Expression::NoneLiteral","name":"NoneLiteral","abstract":false,"superclass":{"html_id":"Cosmo/Cosmo/AST/Expression/Literal","kind":"class","full_name":"Cosmo::AST::Expression::Literal","name":"Literal"},"ancestors":[{"html_id":"Cosmo/Cosmo/AST/Expression/Literal","kind":"class","full_name":"Cosmo::AST::Expression::Literal","name":"Literal"},{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":105,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L105"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo/AST/Expression","kind":"module","full_name":"Cosmo::AST::Expression","name":"Expression"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":106,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L106"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a nicely readable and concise string representation of this object,\ntypically intended for users.\n\nThis method should usually **not** be overridden. It delegates to\n`#to_s(IO)` which can be overridden for custom implementations.\n\nAlso see `#inspect`.","summary":"<p>Returns a nicely readable and concise string representation of this object, typically intended for users.</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":109,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L109"},"def":{"name":"to_s","visibility":"Public","body":"\"Literal<none>\""}}]},{"html_id":"Cosmo/Cosmo/AST/Expression/StringLiteral","path":"Cosmo/AST/Expression/StringLiteral.html","kind":"class","full_name":"Cosmo::AST::Expression::StringLiteral","name":"StringLiteral","abstract":false,"superclass":{"html_id":"Cosmo/Cosmo/AST/Expression/Literal","kind":"class","full_name":"Cosmo::AST::Expression::Literal","name":"Literal"},"ancestors":[{"html_id":"Cosmo/Cosmo/AST/Expression/Literal","kind":"class","full_name":"Cosmo::AST::Expression::Literal","name":"Literal"},{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":70,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L70"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo/AST/Expression","kind":"module","full_name":"Cosmo::AST::Expression","name":"Expression"},"constructors":[{"html_id":"new(value:String)-class-method","name":"new","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : String)","location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":71,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L71"},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a nicely readable and concise string representation of this object,\ntypically intended for users.\n\nThis method should usually **not** be overridden. It delegates to\n`#to_s(IO)` which can be overridden for custom implementations.\n\nAlso see `#inspect`.","summary":"<p>Returns a nicely readable and concise string representation of this object, typically intended for users.</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":72,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L72"},"def":{"name":"to_s","visibility":"Public","body":"\"Literal<\\\"#{value}\\\">\""}}]},{"html_id":"Cosmo/Cosmo/AST/Expression/UnaryOp","path":"Cosmo/AST/Expression/UnaryOp.html","kind":"class","full_name":"Cosmo::AST::Expression::UnaryOp","name":"UnaryOp","abstract":false,"superclass":{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},"ancestors":[{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":53,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L53"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo/AST/Expression","kind":"module","full_name":"Cosmo::AST::Expression","name":"Expression"},"constructors":[{"html_id":"new(operator:Cosmo::Token,operand:Cosmo::AST::Node)-class-method","name":"new","abstract":false,"args":[{"name":"operator","external_name":"operator","restriction":"::Cosmo::Token"},{"name":"operand","external_name":"operand","restriction":"::Cosmo::AST::Node"}],"args_string":"(operator : Cosmo::Token, operand : Cosmo::AST::Node)","args_html":"(operator : <a href=\"../../../Cosmo/Token.html\">Cosmo::Token</a>, operand : <a href=\"../../../Cosmo/AST/Node.html\">Cosmo::AST::Node</a>)","location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":57,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L57"},"def":{"name":"new","args":[{"name":"operator","external_name":"operator","restriction":"::Cosmo::Token"},{"name":"operand","external_name":"operand","restriction":"::Cosmo::AST::Node"}],"visibility":"Public","body":"_ = allocate\n_.initialize(operator, operand)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"operand:Node-instance-method","name":"operand","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":55,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L55"},"def":{"name":"operand","return_type":"Node","visibility":"Public","body":"@operand"}},{"html_id":"operator:Token-instance-method","name":"operator","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":54,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L54"},"def":{"name":"operator","return_type":"Token","visibility":"Public","body":"@operator"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a nicely readable and concise string representation of this object,\ntypically intended for users.\n\nThis method should usually **not** be overridden. It delegates to\n`#to_s(IO)` which can be overridden for custom implementations.\n\nAlso see `#inspect`.","summary":"<p>Returns a nicely readable and concise string representation of this object, typically intended for users.</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":60,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L60"},"def":{"name":"to_s","visibility":"Public","body":"\"Unary<operator: #{@operator}, operand: #{@operand.to_s}>\""}}]},{"html_id":"Cosmo/Cosmo/AST/Expression/Var","path":"Cosmo/AST/Expression/Var.html","kind":"class","full_name":"Cosmo::AST::Expression::Var","name":"Var","abstract":false,"superclass":{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},"ancestors":[{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":29,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L29"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo/AST/Expression","kind":"module","full_name":"Cosmo::AST::Expression","name":"Expression"},"constructors":[{"html_id":"new(token:Cosmo::Token)-class-method","name":"new","abstract":false,"args":[{"name":"token","external_name":"token","restriction":"::Cosmo::Token"}],"args_string":"(token : Cosmo::Token)","args_html":"(token : <a href=\"../../../Cosmo/Token.html\">Cosmo::Token</a>)","location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":32,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L32"},"def":{"name":"new","args":[{"name":"token","external_name":"token","restriction":"::Cosmo::Token"}],"visibility":"Public","body":"_ = allocate\n_.initialize(token)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a nicely readable and concise string representation of this object,\ntypically intended for users.\n\nThis method should usually **not** be overridden. It delegates to\n`#to_s(IO)` which can be overridden for custom implementations.\n\nAlso see `#inspect`.","summary":"<p>Returns a nicely readable and concise string representation of this object, typically intended for users.</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":35,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L35"},"def":{"name":"to_s","visibility":"Public","body":"\"Var<token: #{@token.to_s}>\""}},{"html_id":"token:Token-instance-method","name":"token","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":30,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L30"},"def":{"name":"token","return_type":"Token","visibility":"Public","body":"@token"}}]},{"html_id":"Cosmo/Cosmo/AST/Expression/VarAssignment","path":"Cosmo/AST/Expression/VarAssignment.html","kind":"class","full_name":"Cosmo::AST::Expression::VarAssignment","name":"VarAssignment","abstract":false,"superclass":{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},"ancestors":[{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":17,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L17"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo/AST/Expression","kind":"module","full_name":"Cosmo::AST::Expression","name":"Expression"},"constructors":[{"html_id":"new(var:Cosmo::AST::Expression::Var,value:Cosmo::AST::Node)-class-method","name":"new","abstract":false,"args":[{"name":"var","external_name":"var","restriction":"::Cosmo::AST::Expression::Var"},{"name":"value","external_name":"value","restriction":"::Cosmo::AST::Node"}],"args_string":"(var : Cosmo::AST::Expression::Var, value : Cosmo::AST::Node)","args_html":"(var : <a href=\"../../../Cosmo/AST/Expression/Var.html\">Cosmo::AST::Expression::Var</a>, value : <a href=\"../../../Cosmo/AST/Node.html\">Cosmo::AST::Node</a>)","location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":21,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L21"},"def":{"name":"new","args":[{"name":"var","external_name":"var","restriction":"::Cosmo::AST::Expression::Var"},{"name":"value","external_name":"value","restriction":"::Cosmo::AST::Node"}],"visibility":"Public","body":"_ = allocate\n_.initialize(var, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a nicely readable and concise string representation of this object,\ntypically intended for users.\n\nThis method should usually **not** be overridden. It delegates to\n`#to_s(IO)` which can be overridden for custom implementations.\n\nAlso see `#inspect`.","summary":"<p>Returns a nicely readable and concise string representation of this object, typically intended for users.</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":24,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L24"},"def":{"name":"to_s","visibility":"Public","body":"\"VarAssignment<var: #{@var.token.value.to_s}, value: #{@value.to_s}>\""}},{"html_id":"value:Node-instance-method","name":"value","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":19,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L19"},"def":{"name":"value","return_type":"Node","visibility":"Public","body":"@value"}},{"html_id":"var:Var-instance-method","name":"var","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":18,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L18"},"def":{"name":"var","return_type":"Var","visibility":"Public","body":"@var"}}]},{"html_id":"Cosmo/Cosmo/AST/Expression/VarDeclaration","path":"Cosmo/AST/Expression/VarDeclaration.html","kind":"class","full_name":"Cosmo::AST::Expression::VarDeclaration","name":"VarDeclaration","abstract":false,"superclass":{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},"ancestors":[{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":4,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L4"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo/AST/Expression","kind":"module","full_name":"Cosmo::AST::Expression","name":"Expression"},"constructors":[{"html_id":"new(typedef:Cosmo::Token,var:Cosmo::AST::Expression::Var,value:Cosmo::AST::Node)-class-method","name":"new","abstract":false,"args":[{"name":"typedef","external_name":"typedef","restriction":"::Cosmo::Token"},{"name":"var","external_name":"var","restriction":"::Cosmo::AST::Expression::Var"},{"name":"value","external_name":"value","restriction":"::Cosmo::AST::Node"}],"args_string":"(typedef : Cosmo::Token, var : Cosmo::AST::Expression::Var, value : Cosmo::AST::Node)","args_html":"(typedef : <a href=\"../../../Cosmo/Token.html\">Cosmo::Token</a>, var : <a href=\"../../../Cosmo/AST/Expression/Var.html\">Cosmo::AST::Expression::Var</a>, value : <a href=\"../../../Cosmo/AST/Node.html\">Cosmo::AST::Node</a>)","location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":9,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L9"},"def":{"name":"new","args":[{"name":"typedef","external_name":"typedef","restriction":"::Cosmo::Token"},{"name":"var","external_name":"var","restriction":"::Cosmo::AST::Expression::Var"},{"name":"value","external_name":"value","restriction":"::Cosmo::AST::Node"}],"visibility":"Public","body":"_ = allocate\n_.initialize(typedef, var, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a nicely readable and concise string representation of this object,\ntypically intended for users.\n\nThis method should usually **not** be overridden. It delegates to\n`#to_s(IO)` which can be overridden for custom implementations.\n\nAlso see `#inspect`.","summary":"<p>Returns a nicely readable and concise string representation of this object, typically intended for users.</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":12,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L12"},"def":{"name":"to_s","visibility":"Public","body":"\"VarDeclaration<typedef: #{@typedef.value}, var: #{@var.token.value.to_s}, value: #{@value.to_s}>\""}},{"html_id":"typedef:Token-instance-method","name":"typedef","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":5,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L5"},"def":{"name":"typedef","return_type":"Token","visibility":"Public","body":"@typedef"}},{"html_id":"value:Node-instance-method","name":"value","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":7,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L7"},"def":{"name":"value","return_type":"Node","visibility":"Public","body":"@value"}},{"html_id":"var:Var-instance-method","name":"var","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/expression_nodes.cr","line_number":6,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/expression_nodes.cr#L6"},"def":{"name":"var","return_type":"Var","visibility":"Public","body":"@var"}}]}]},{"html_id":"Cosmo/Cosmo/AST/Node","path":"Cosmo/AST/Node.html","kind":"class","full_name":"Cosmo::AST::Node","name":"Node","abstract":true,"superclass":{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/parser/ast.cr","line_number":8,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast.cr#L8"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"Cosmo/Cosmo/AST/Expression/BinaryOp","kind":"class","full_name":"Cosmo::AST::Expression::BinaryOp","name":"BinaryOp"},{"html_id":"Cosmo/Cosmo/AST/Expression/Literal","kind":"class","full_name":"Cosmo::AST::Expression::Literal","name":"Literal"},{"html_id":"Cosmo/Cosmo/AST/Expression/UnaryOp","kind":"class","full_name":"Cosmo::AST::Expression::UnaryOp","name":"UnaryOp"},{"html_id":"Cosmo/Cosmo/AST/Expression/Var","kind":"class","full_name":"Cosmo::AST::Expression::Var","name":"Var"},{"html_id":"Cosmo/Cosmo/AST/Expression/VarAssignment","kind":"class","full_name":"Cosmo::AST::Expression::VarAssignment","name":"VarAssignment"},{"html_id":"Cosmo/Cosmo/AST/Expression/VarDeclaration","kind":"class","full_name":"Cosmo::AST::Expression::VarDeclaration","name":"VarDeclaration"},{"html_id":"Cosmo/Cosmo/AST/Statement/Block","kind":"class","full_name":"Cosmo::AST::Statement::Block","name":"Block"}],"namespace":{"html_id":"Cosmo/Cosmo/AST","kind":"module","full_name":"Cosmo::AST","name":"AST"},"instance_methods":[{"html_id":"end_location:Location|Nil-instance-method","name":"end_location","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast.cr","line_number":10,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast.cr#L10"},"def":{"name":"end_location","return_type":"Location | ::Nil","visibility":"Public","body":"@end_location"}},{"html_id":"end_location=(end_location:Location|Nil)-instance-method","name":"end_location=","abstract":false,"args":[{"name":"end_location","external_name":"end_location","restriction":"Location | ::Nil"}],"args_string":"(end_location : Location | Nil)","args_html":"(end_location : <a href=\"../../Cosmo/Location.html\">Location</a> | Nil)","location":{"filename":"src/cosmo/syntax/parser/ast.cr","line_number":10,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast.cr#L10"},"def":{"name":"end_location=","args":[{"name":"end_location","external_name":"end_location","restriction":"Location | ::Nil"}],"visibility":"Public","body":"@end_location = end_location"}},{"html_id":"single_expression:Node-instance-method","name":"single_expression","doc":"It yields itself for any node, but if it's a\n`Statement::ExpressionList`, then it returns the\nfirst node of the `ExpressionList` statement","summary":"<p>It yields itself for any node, but if it's a <code>Statement::ExpressionList</code>, then it returns the first node of the <code>ExpressionList</code> statement</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast.cr","line_number":16,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast.cr#L16"},"def":{"name":"single_expression","return_type":"Node","visibility":"Public","body":"single_expression? || self"}},{"html_id":"single_expression?:Node|Nil-instance-method","name":"single_expression?","doc":"It yields `nil` always for any regular node.\n(It is overridden by `ExpressionList` to implement `#single_expression`.)","summary":"<p>It yields <code>nil</code> always for any regular node.</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast.cr","line_number":22,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast.cr#L22"},"def":{"name":"single_expression?","return_type":"Node | ::Nil","visibility":"Public","body":"nil"}},{"html_id":"start_location:Location|Nil-instance-method","name":"start_location","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast.cr","line_number":9,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast.cr#L9"},"def":{"name":"start_location","return_type":"Location | ::Nil","visibility":"Public","body":"@start_location"}},{"html_id":"start_location=(start_location:Location|Nil)-instance-method","name":"start_location=","abstract":false,"args":[{"name":"start_location","external_name":"start_location","restriction":"Location | ::Nil"}],"args_string":"(start_location : Location | Nil)","args_html":"(start_location : <a href=\"../../Cosmo/Location.html\">Location</a> | Nil)","location":{"filename":"src/cosmo/syntax/parser/ast.cr","line_number":9,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast.cr#L9"},"def":{"name":"start_location=","args":[{"name":"start_location","external_name":"start_location","restriction":"Location | ::Nil"}],"visibility":"Public","body":"@start_location = start_location"}},{"html_id":"visibility:Cosmo::AST::Visibility-instance-method","name":"visibility","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast.cr","line_number":11,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast.cr#L11"},"def":{"name":"visibility","visibility":"Public","body":"@visibility"}},{"html_id":"visibility=(visibility:Cosmo::AST::Visibility)-instance-method","name":"visibility=","abstract":false,"args":[{"name":"visibility","external_name":"visibility","restriction":"::Cosmo::AST::Visibility"}],"args_string":"(visibility : Cosmo::AST::Visibility)","args_html":"(visibility : <a href=\"../../Cosmo/AST/Visibility.html\">Cosmo::AST::Visibility</a>)","location":{"filename":"src/cosmo/syntax/parser/ast.cr","line_number":11,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast.cr#L11"},"def":{"name":"visibility=","args":[{"name":"visibility","external_name":"visibility","restriction":"::Cosmo::AST::Visibility"}],"visibility":"Public","body":"@visibility = visibility"}}]},{"html_id":"Cosmo/Cosmo/AST/Statement","path":"Cosmo/AST/Statement.html","kind":"module","full_name":"Cosmo::AST::Statement","name":"Statement","abstract":false,"locations":[{"filename":"src/cosmo/syntax/parser/ast/statement_nodes.cr","line_number":1,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/statement_nodes.cr#L1"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo/AST","kind":"module","full_name":"Cosmo::AST","name":"AST"},"types":[{"html_id":"Cosmo/Cosmo/AST/Statement/Block","path":"Cosmo/AST/Statement/Block.html","kind":"class","full_name":"Cosmo::AST::Statement::Block","name":"Block","abstract":false,"superclass":{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},"ancestors":[{"html_id":"Cosmo/Cosmo/AST/Node","kind":"class","full_name":"Cosmo::AST::Node","name":"Node"},{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/parser/ast/statement_nodes.cr","line_number":2,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/statement_nodes.cr#L2"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo/AST/Statement","kind":"module","full_name":"Cosmo::AST::Statement","name":"Statement"},"constructors":[{"html_id":"new(nodes:Array(Cosmo::AST::Node)=[]ofNode)-class-method","name":"new","abstract":false,"args":[{"name":"nodes","default_value":"[] of Node","external_name":"nodes","restriction":"::Array(::Cosmo::AST::Node)"}],"args_string":"(nodes : Array(Cosmo::AST::Node) = [] of Node)","args_html":"(nodes : Array(<a href=\"../../../Cosmo/AST/Node.html\">Cosmo::AST::Node</a>) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Node</span>)","location":{"filename":"src/cosmo/syntax/parser/ast/statement_nodes.cr","line_number":5,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/statement_nodes.cr#L5"},"def":{"name":"new","args":[{"name":"nodes","default_value":"[] of Node","external_name":"nodes","restriction":"::Array(::Cosmo::AST::Node)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(nodes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[](i:UInt):Node-instance-method","name":"[]","abstract":false,"args":[{"name":"i","external_name":"i","restriction":"UInt"}],"args_string":"(i : UInt) : Node","args_html":"(i : UInt) : <a href=\"../../../Cosmo/AST/Node.html\">Node</a>","location":{"filename":"src/cosmo/syntax/parser/ast/statement_nodes.cr","line_number":12,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/statement_nodes.cr#L12"},"def":{"name":"[]","args":[{"name":"i","external_name":"i","restriction":"UInt"}],"return_type":"Node","visibility":"Public","body":"@nodes[i]"}},{"html_id":"empty?-instance-method","name":"empty?","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/statement_nodes.cr","line_number":8,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/statement_nodes.cr#L8"},"def":{"name":"empty?","visibility":"Public","body":"@nodes.empty?"}},{"html_id":"end_location:Location-instance-method","name":"end_location","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/statement_nodes.cr","line_number":28,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/statement_nodes.cr#L28"},"def":{"name":"end_location","return_type":"Location","visibility":"Public","body":"@end_location || @nodes.last?.try(&.end_location)"}},{"html_id":"first:Node-instance-method","name":"first","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/statement_nodes.cr","line_number":16,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/statement_nodes.cr#L16"},"def":{"name":"first","return_type":"Node","visibility":"Public","body":"@nodes.first"}},{"html_id":"last:Node-instance-method","name":"last","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/statement_nodes.cr","line_number":20,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/statement_nodes.cr#L20"},"def":{"name":"last","return_type":"Node","visibility":"Public","body":"@nodes.last"}},{"html_id":"location:Location-instance-method","name":"location","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/statement_nodes.cr","line_number":24,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/statement_nodes.cr#L24"},"def":{"name":"location","return_type":"Location","visibility":"Public","body":"@location || @nodes.first?.try(&.location)"}},{"html_id":"nodes:Array(Node)-instance-method","name":"nodes","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/statement_nodes.cr","line_number":3,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/statement_nodes.cr#L3"},"def":{"name":"nodes","return_type":"Array(Node)","visibility":"Public","body":"@nodes"}},{"html_id":"single_expression?:Node|Nil-instance-method","name":"single_expression?","doc":"It yields first node if this holds only one node, or yields `nil`.","summary":"<p>It yields first node if this holds only one node, or yields <code>nil</code>.</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/statement_nodes.cr","line_number":33,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/statement_nodes.cr#L33"},"def":{"name":"single_expression?","return_type":"Node | ::Nil","visibility":"Public","body":"if @nodes.size == 1\n  return @nodes.first.single_expression\nend\nnil\n"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a nicely readable and concise string representation of this object,\ntypically intended for users.\n\nThis method should usually **not** be overridden. It delegates to\n`#to_s(IO)` which can be overridden for custom implementations.\n\nAlso see `#inspect`.","summary":"<p>Returns a nicely readable and concise string representation of this object, typically intended for users.</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast/statement_nodes.cr","line_number":38,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast/statement_nodes.cr#L38"},"def":{"name":"to_s","visibility":"Public","body":"\"Block<nodes: [#{@nodes.map(&.to_s).join(\", \")}]>\""}}]}]},{"html_id":"Cosmo/Cosmo/AST/Visibility","path":"Cosmo/AST/Visibility.html","kind":"enum","full_name":"Cosmo::AST::Visibility","name":"Visibility","abstract":false,"ancestors":[{"html_id":"Cosmo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"Cosmo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"Cosmo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/parser/ast.cr","line_number":2,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast.cr#L2"}],"repository_name":"Cosmo","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Public","name":"Public","value":"0"},{"id":"Protected","name":"Protected","value":"1"},{"id":"Private","name":"Private","value":"2"}],"namespace":{"html_id":"Cosmo/Cosmo/AST","kind":"module","full_name":"Cosmo::AST","name":"AST"},"instance_methods":[{"html_id":"private?-instance-method","name":"private?","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast.cr","line_number":5,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast.cr#L5"},"def":{"name":"private?","visibility":"Public","body":"self == Private"}},{"html_id":"protected?-instance-method","name":"protected?","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast.cr","line_number":4,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast.cr#L4"},"def":{"name":"protected?","visibility":"Public","body":"self == Protected"}},{"html_id":"public?-instance-method","name":"public?","abstract":false,"location":{"filename":"src/cosmo/syntax/parser/ast.cr","line_number":3,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser/ast.cr#L3"},"def":{"name":"public?","visibility":"Public","body":"self == Public"}}]}]},{"html_id":"Cosmo/Cosmo/Interpreter","path":"Cosmo/Interpreter.html","kind":"class","full_name":"Cosmo::Interpreter","name":"Interpreter","abstract":false,"superclass":{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/runtime/interpreter.cr","line_number":4,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/runtime/interpreter.cr#L4"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo","kind":"module","full_name":"Cosmo","name":"Cosmo"},"constructors":[{"html_id":"new(output_ast:Bool)-class-method","name":"new","abstract":false,"args":[{"name":"output_ast","external_name":"output_ast","restriction":"::Bool"}],"args_string":"(output_ast : Bool)","args_html":"(output_ast : Bool)","location":{"filename":"src/cosmo/runtime/interpreter.cr","line_number":8,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/runtime/interpreter.cr#L8"},"def":{"name":"new","args":[{"name":"output_ast","external_name":"output_ast","restriction":"::Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(output_ast)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"interpret(source:String,file_path:String):LiteralType-instance-method","name":"interpret","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"String"},{"name":"file_path","external_name":"file_path","restriction":"String"}],"args_string":"(source : String, file_path : String) : LiteralType","args_html":"(source : String, file_path : String) : <a href=\"../LiteralType.html\">LiteralType</a>","location":{"filename":"src/cosmo/runtime/interpreter.cr","line_number":11,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/runtime/interpreter.cr#L11"},"def":{"name":"interpret","args":[{"name":"source","external_name":"source","restriction":"String"},{"name":"file_path","external_name":"file_path","restriction":"String"}],"return_type":"LiteralType","visibility":"Public","body":"parser = Parser.new(source, file_path)\nast = parser.parse\nwalk(ast)\n"}},{"html_id":"output_ast:Bool-instance-method","name":"output_ast","abstract":false,"location":{"filename":"src/cosmo/runtime/interpreter.cr","line_number":6,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/runtime/interpreter.cr#L6"},"def":{"name":"output_ast","return_type":"Bool","visibility":"Public","body":"@output_ast"}},{"html_id":"scope:Cosmo::Scope-instance-method","name":"scope","abstract":false,"location":{"filename":"src/cosmo/runtime/interpreter.cr","line_number":5,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/runtime/interpreter.cr#L5"},"def":{"name":"scope","visibility":"Public","body":"@scope"}}]},{"html_id":"Cosmo/Cosmo/Keywords","path":"Cosmo/Keywords.html","kind":"module","full_name":"Cosmo::Keywords","name":"Keywords","abstract":false,"locations":[{"filename":"src/cosmo/syntax/lexer/keywords.cr","line_number":3,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/keywords.cr#L3"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"KEYWORDS","name":"KEYWORDS","value":"{\"true\" => Syntax::Boolean, \"false\" => Syntax::Boolean, \"none\" => Syntax::None, \"fn\" => Syntax::Function, \"if\" => Syntax::If, \"in\" => Syntax::In, \"of\" => Syntax::Of, \"else\" => Syntax::Else, \"for\" => Syntax::For, \"while\" => Syntax::While, \"break\" => Syntax::Break, \"next\" => Syntax::Next, \"match\" => Syntax::Match, \"global\" => Syntax::Global, \"const\" => Syntax::Constant, \"return\" => Syntax::Return}"},{"id":"TYPE_KEYWORDS","name":"TYPE_KEYWORDS","value":"[\"bool\", \"string\", \"char\", \"int\", \"float\", \"void\", \"none\"]"}],"namespace":{"html_id":"Cosmo/Cosmo","kind":"module","full_name":"Cosmo","name":"Cosmo"},"class_methods":[{"html_id":"get_syntax(s)-class-method","name":"get_syntax","abstract":false,"args":[{"name":"s","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/cosmo/syntax/lexer/keywords.cr","line_number":33,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/keywords.cr#L33"},"def":{"name":"get_syntax","args":[{"name":"s","external_name":"s","restriction":""}],"visibility":"Public","body":"KEYWORDS.fetch(s) do\n  raise(\"Invalid keyword #{s}\")\nend"}},{"html_id":"keyword?(s)-class-method","name":"keyword?","abstract":false,"args":[{"name":"s","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/cosmo/syntax/lexer/keywords.cr","line_number":29,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/keywords.cr#L29"},"def":{"name":"keyword?","args":[{"name":"s","external_name":"s","restriction":""}],"visibility":"Public","body":"KEYWORDS.has_key?(s)"}},{"html_id":"type?(s)-class-method","name":"type?","abstract":false,"args":[{"name":"s","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/cosmo/syntax/lexer/keywords.cr","line_number":25,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/keywords.cr#L25"},"def":{"name":"type?","args":[{"name":"s","external_name":"s","restriction":""}],"visibility":"Public","body":"TYPE_KEYWORDS.includes?(s)"}}]},{"html_id":"Cosmo/Cosmo/Lexer","path":"Cosmo/Lexer.html","kind":"class","full_name":"Cosmo::Lexer","name":"Lexer","abstract":false,"superclass":{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/lexer.cr","line_number":9,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer.cr#L9"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo","kind":"module","full_name":"Cosmo","name":"Cosmo"},"constructors":[{"html_id":"new(source:String,file_path:String)-class-method","name":"new","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"::String"},{"name":"file_path","external_name":"file_path","restriction":"::String"}],"args_string":"(source : String, file_path : String)","args_html":"(source : String, file_path : String)","location":{"filename":"src/cosmo/syntax/lexer.cr","line_number":18,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer.cr#L18"},"def":{"name":"new","args":[{"name":"source","external_name":"source","restriction":"::String"},{"name":"file_path","external_name":"file_path","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(source, file_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"char_pos:UInt32-instance-method","name":"char_pos","abstract":false,"location":{"filename":"src/cosmo/syntax/lexer.cr","line_number":14,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer.cr#L14"},"def":{"name":"char_pos","return_type":"UInt32","visibility":"Public","body":"@char_pos"}},{"html_id":"file_path:String-instance-method","name":"file_path","abstract":false,"location":{"filename":"src/cosmo/syntax/lexer.cr","line_number":16,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer.cr#L16"},"def":{"name":"file_path","return_type":"String","visibility":"Public","body":"@file_path"}},{"html_id":"line:UInt32-instance-method","name":"line","abstract":false,"location":{"filename":"src/cosmo/syntax/lexer.cr","line_number":12,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer.cr#L12"},"def":{"name":"line","return_type":"UInt32","visibility":"Public","body":"@line"}},{"html_id":"position:UInt32-instance-method","name":"position","abstract":false,"location":{"filename":"src/cosmo/syntax/lexer.cr","line_number":13,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer.cr#L13"},"def":{"name":"position","return_type":"UInt32","visibility":"Public","body":"@position"}},{"html_id":"source:String-instance-method","name":"source","abstract":false,"location":{"filename":"src/cosmo/syntax/lexer.cr","line_number":10,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer.cr#L10"},"def":{"name":"source","return_type":"String","visibility":"Public","body":"@source"}},{"html_id":"tokenize:Array(Token)-instance-method","name":"tokenize","abstract":false,"location":{"filename":"src/cosmo/syntax/lexer.cr","line_number":21,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer.cr#L21"},"def":{"name":"tokenize","return_type":"Array(Token)","visibility":"Public","body":"while !finished?\n  lex\nend\nadd_token(Syntax::EOF, nil)\n@tokens\n"}},{"html_id":"tokens:Array(Cosmo::Token)-instance-method","name":"tokens","abstract":false,"location":{"filename":"src/cosmo/syntax/lexer.cr","line_number":15,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer.cr#L15"},"def":{"name":"tokens","visibility":"Public","body":"@tokens"}}]},{"html_id":"Cosmo/Cosmo/Location","path":"Cosmo/Location.html","kind":"class","full_name":"Cosmo::Location","name":"Location","abstract":false,"superclass":{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/lexer/location.cr","line_number":1,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/location.cr#L1"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo","kind":"module","full_name":"Cosmo","name":"Cosmo"},"constructors":[{"html_id":"new(file_name:Nil|String,line:UInt32,position:UInt32)-class-method","name":"new","abstract":false,"args":[{"name":"file_name","external_name":"file_name","restriction":"::Nil | ::String"},{"name":"line","external_name":"line","restriction":"::UInt32"},{"name":"position","external_name":"position","restriction":"::UInt32"}],"args_string":"(file_name : Nil | String, line : UInt32, position : UInt32)","args_html":"(file_name : Nil | String, line : UInt32, position : UInt32)","location":{"filename":"src/cosmo/syntax/lexer/location.cr","line_number":6,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/location.cr#L6"},"def":{"name":"new","args":[{"name":"file_name","external_name":"file_name","restriction":"::Nil | ::String"},{"name":"line","external_name":"line","restriction":"::UInt32"},{"name":"position","external_name":"position","restriction":"::UInt32"}],"visibility":"Public","body":"_ = allocate\n_.initialize(file_name, line, position)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"between?(min:UInt32,max:UInt32)-instance-method","name":"between?","abstract":false,"args":[{"name":"min","external_name":"min","restriction":"UInt32"},{"name":"max","external_name":"max","restriction":"UInt32"}],"args_string":"(min : UInt32, max : UInt32)","args_html":"(min : UInt32, max : UInt32)","location":{"filename":"src/cosmo/syntax/lexer/location.cr","line_number":9,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/location.cr#L9"},"def":{"name":"between?","args":[{"name":"min","external_name":"min","restriction":"UInt32"},{"name":"max","external_name":"max","restriction":"UInt32"}],"visibility":"Public","body":"if min && max\nelse\n  return false\nend\nmin <= self && self <= max\n"}},{"html_id":"directory-instance-method","name":"directory","abstract":false,"location":{"filename":"src/cosmo/syntax/lexer/location.cr","line_number":14,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/location.cr#L14"},"def":{"name":"directory","visibility":"Public","body":"@file_name.try do |file_name|\n  File.dirname(file_name)\nend"}},{"html_id":"file_name:String|Nil-instance-method","name":"file_name","abstract":false,"location":{"filename":"src/cosmo/syntax/lexer/location.cr","line_number":4,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/location.cr#L4"},"def":{"name":"file_name","return_type":"String | ::Nil","visibility":"Public","body":"@file_name"}},{"html_id":"line:UInt32-instance-method","name":"line","abstract":false,"location":{"filename":"src/cosmo/syntax/lexer/location.cr","line_number":2,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/location.cr#L2"},"def":{"name":"line","return_type":"UInt32","visibility":"Public","body":"@line"}},{"html_id":"position:UInt32-instance-method","name":"position","abstract":false,"location":{"filename":"src/cosmo/syntax/lexer/location.cr","line_number":3,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/location.cr#L3"},"def":{"name":"position","return_type":"UInt32","visibility":"Public","body":"@position"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a nicely readable and concise string representation of this object,\ntypically intended for users.\n\nThis method should usually **not** be overridden. It delegates to\n`#to_s(IO)` which can be overridden for custom implementations.\n\nAlso see `#inspect`.","summary":"<p>Returns a nicely readable and concise string representation of this object, typically intended for users.</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/lexer/location.cr","line_number":18,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/location.cr#L18"},"def":{"name":"to_s","visibility":"Public","body":"\"#{@file_name}:#{@line}:#{position}\""}}]},{"html_id":"Cosmo/Cosmo/Logger","path":"Cosmo/Logger.html","kind":"module","full_name":"Cosmo::Logger","name":"Logger","abstract":false,"locations":[{"filename":"src/cosmo/logger.cr","line_number":1,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/logger.cr#L1"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"Cosmo/Cosmo/Logger","kind":"module","full_name":"Cosmo::Logger","name":"Logger"}],"namespace":{"html_id":"Cosmo/Cosmo","kind":"module","full_name":"Cosmo","name":"Cosmo"},"instance_methods":[{"html_id":"report_error(error_type:String,message:String,line:UInt32,pos:UInt32):Exception-instance-method","name":"report_error","abstract":false,"args":[{"name":"error_type","external_name":"error_type","restriction":"String"},{"name":"message","external_name":"message","restriction":"String"},{"name":"line","external_name":"line","restriction":"UInt32"},{"name":"pos","external_name":"pos","restriction":"UInt32"}],"args_string":"(error_type : String, message : String, line : UInt32, pos : UInt32) : Exception","args_html":"(error_type : String, message : String, line : UInt32, pos : UInt32) : Exception","location":{"filename":"src/cosmo/logger.cr","line_number":8,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/logger.cr#L8"},"def":{"name":"report_error","args":[{"name":"error_type","external_name":"error_type","restriction":"String"},{"name":"message","external_name":"message","restriction":"String"},{"name":"line","external_name":"line","restriction":"UInt32"},{"name":"pos","external_name":"pos","restriction":"UInt32"}],"return_type":"Exception","visibility":"Public","body":"raise(\"[#{line}:#{pos + 1}] #{error_type}: #{message}\")"}},{"html_id":"report_error(error_type:String,message:String,token:Token):Exception-instance-method","name":"report_error","abstract":false,"args":[{"name":"error_type","external_name":"error_type","restriction":"String"},{"name":"message","external_name":"message","restriction":"String"},{"name":"token","external_name":"token","restriction":"Token"}],"args_string":"(error_type : String, message : String, token : Token) : Exception","args_html":"(error_type : String, message : String, token : <a href=\"../Cosmo/Token.html\">Token</a>) : Exception","location":{"filename":"src/cosmo/logger.cr","line_number":4,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/logger.cr#L4"},"def":{"name":"report_error","args":[{"name":"error_type","external_name":"error_type","restriction":"String"},{"name":"message","external_name":"message","restriction":"String"},{"name":"token","external_name":"token","restriction":"Token"}],"return_type":"Exception","visibility":"Public","body":"raise(\"[#{token.location.line}:#{token.location.position + 1}] #{error_type}: #{message}\")"}}]},{"html_id":"Cosmo/Cosmo/Parser","path":"Cosmo/Parser.html","kind":"class","full_name":"Cosmo::Parser","name":"Parser","abstract":false,"superclass":{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/parser.cr","line_number":4,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser.cr#L4"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo","kind":"module","full_name":"Cosmo","name":"Cosmo"},"constructors":[{"html_id":"new(source:String,file_path:String)-class-method","name":"new","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"String"},{"name":"file_path","external_name":"file_path","restriction":"String"}],"args_string":"(source : String, file_path : String)","args_html":"(source : String, file_path : String)","location":{"filename":"src/cosmo/syntax/parser.cr","line_number":8,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser.cr#L8"},"def":{"name":"new","args":[{"name":"source","external_name":"source","restriction":"String"},{"name":"file_path","external_name":"file_path","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(source, file_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"consume_current:Token-instance-method","name":"consume_current","doc":"Consume the current token and advance the position","summary":"<p>Consume the current token and advance the position</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser.cr","line_number":272,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser.cr#L272"},"def":{"name":"consume_current","return_type":"Token","visibility":"Public","body":"token = current\n@position = @position + 1\ntoken\n"}},{"html_id":"parse-instance-method","name":"parse","doc":"Entry point","summary":"<p>Entry point</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/parser.cr","line_number":15,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser.cr#L15"},"def":{"name":"parse","visibility":"Public","body":"parse_block"}},{"html_id":"peek(offset:Int32=1):Token-instance-method","name":"peek","doc":"Consume the current token and advance the position","summary":"<p>Consume the current token and advance the position</p>","abstract":false,"args":[{"name":"offset","default_value":"1","external_name":"offset","restriction":"Int32"}],"args_string":"(offset : Int32 = 1) : Token","args_html":"(offset : Int32 = <span class=\"n\">1</span>) : <a href=\"../Cosmo/Token.html\">Token</a>","location":{"filename":"src/cosmo/syntax/parser.cr","line_number":239,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser.cr#L239"},"def":{"name":"peek","args":[{"name":"offset","default_value":"1","external_name":"offset","restriction":"Int32"}],"return_type":"Token","visibility":"Public","body":"@tokens[@position + offset]"}},{"html_id":"position:UInt32-instance-method","name":"position","abstract":false,"location":{"filename":"src/cosmo/syntax/parser.cr","line_number":5,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser.cr#L5"},"def":{"name":"position","return_type":"UInt32","visibility":"Public","body":"@position"}},{"html_id":"tokens:Array(Token)-instance-method","name":"tokens","abstract":false,"location":{"filename":"src/cosmo/syntax/parser.cr","line_number":6,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/parser.cr#L6"},"def":{"name":"tokens","return_type":"Array(Token)","visibility":"Public","body":"@tokens"}}]},{"html_id":"Cosmo/Cosmo/Scope","path":"Cosmo/Scope.html","kind":"class","full_name":"Cosmo::Scope","name":"Scope","abstract":false,"superclass":{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"Cosmo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/runtime/scope.cr","line_number":4,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/runtime/scope.cr#L4"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo","kind":"module","full_name":"Cosmo","name":"Cosmo"},"instance_methods":[{"html_id":"assign(identifier:Token,value:LiteralType)-instance-method","name":"assign","abstract":false,"args":[{"name":"identifier","external_name":"identifier","restriction":"Token"},{"name":"value","external_name":"value","restriction":"LiteralType"}],"args_string":"(identifier : Token, value : LiteralType)","args_html":"(identifier : <a href=\"../Cosmo/Token.html\">Token</a>, value : <a href=\"../LiteralType.html\">LiteralType</a>)","location":{"filename":"src/cosmo/runtime/scope.cr","line_number":14,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/runtime/scope.cr#L14"},"def":{"name":"assign","args":[{"name":"identifier","external_name":"identifier","restriction":"Token"},{"name":"value","external_name":"value","restriction":"LiteralType"}],"visibility":"Public","body":"typedef, old_value = @local_variables[identifier.value.to_s]\nTypeChecker.assert(typedef, value, identifier)\nif @local_variables.has_key?(identifier.value)\nelse\n  Logger.report_error(\"Undefined variable\", identifier.value.to_s, identifier)\nend\n@local_variables[identifier.value.to_s] = {typedef, value}\nvalue\n"}},{"html_id":"declare(typedef:Token,identifier:Token,value:LiteralType)-instance-method","name":"declare","abstract":false,"args":[{"name":"typedef","external_name":"typedef","restriction":"Token"},{"name":"identifier","external_name":"identifier","restriction":"Token"},{"name":"value","external_name":"value","restriction":"LiteralType"}],"args_string":"(typedef : Token, identifier : Token, value : LiteralType)","args_html":"(typedef : <a href=\"../Cosmo/Token.html\">Token</a>, identifier : <a href=\"../Cosmo/Token.html\">Token</a>, value : <a href=\"../LiteralType.html\">LiteralType</a>)","location":{"filename":"src/cosmo/runtime/scope.cr","line_number":8,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/runtime/scope.cr#L8"},"def":{"name":"declare","args":[{"name":"typedef","external_name":"typedef","restriction":"Token"},{"name":"identifier","external_name":"identifier","restriction":"Token"},{"name":"value","external_name":"value","restriction":"LiteralType"}],"visibility":"Public","body":"@local_variables[identifier.value.to_s] = {typedef.value.to_s, value}\nTypeChecker.assert(typedef.value.to_s, value, typedef)\nvalue\n"}},{"html_id":"local_variables:Hash(String,{String,Bool|Char|Float32|Float64|Int16|Int32|Int64|Int8|String|Nil})-instance-method","name":"local_variables","abstract":false,"location":{"filename":"src/cosmo/runtime/scope.cr","line_number":6,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/runtime/scope.cr#L6"},"def":{"name":"local_variables","visibility":"Public","body":"@local_variables"}},{"html_id":"lookup(token:Token):LiteralType-instance-method","name":"lookup","abstract":false,"args":[{"name":"token","external_name":"token","restriction":"Token"}],"args_string":"(token : Token) : LiteralType","args_html":"(token : <a href=\"../Cosmo/Token.html\">Token</a>) : <a href=\"../LiteralType.html\">LiteralType</a>","location":{"filename":"src/cosmo/runtime/scope.cr","line_number":22,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/runtime/scope.cr#L22"},"def":{"name":"lookup","args":[{"name":"token","external_name":"token","restriction":"Token"}],"return_type":"LiteralType","visibility":"Public","body":"identifier = token.value\n_, value = @local_variables.has_key?(identifier) ? @local_variables[identifier] : {nil, nil}\nif value.nil? && @parent.nil?\n  Logger.report_error(\"Undefined variable\", token.value.to_s, token)\nend\nif value.nil? && (!@parent.nil?)\n  return unwrap.lookup(token)\nend\nvalue\n"}},{"html_id":"parent:Cosmo::Scope|Nil-instance-method","name":"parent","abstract":false,"location":{"filename":"src/cosmo/runtime/scope.cr","line_number":5,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/runtime/scope.cr#L5"},"def":{"name":"parent","return_type":"Cosmo::Scope | ::Nil","visibility":"Public","body":"@parent"}},{"html_id":"parent=(parent:Cosmo::Scope|Nil)-instance-method","name":"parent=","abstract":false,"args":[{"name":"parent","external_name":"parent","restriction":"Cosmo::Scope | ::Nil"}],"args_string":"(parent : Cosmo::Scope | Nil)","args_html":"(parent : <a href=\"../Cosmo/Scope.html\">Cosmo::Scope</a> | Nil)","location":{"filename":"src/cosmo/runtime/scope.cr","line_number":5,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/runtime/scope.cr#L5"},"def":{"name":"parent=","args":[{"name":"parent","external_name":"parent","restriction":"Cosmo::Scope | ::Nil"}],"visibility":"Public","body":"@parent = parent"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a nicely readable and concise string representation of this object,\ntypically intended for users.\n\nThis method should usually **not** be overridden. It delegates to\n`#to_s(IO)` which can be overridden for custom implementations.\n\nAlso see `#inspect`.","summary":"<p>Returns a nicely readable and concise string representation of this object, typically intended for users.</p>","abstract":false,"location":{"filename":"src/cosmo/runtime/scope.cr","line_number":34,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/runtime/scope.cr#L34"},"def":{"name":"to_s","visibility":"Public","body":"\"Scope<#{@parent ? (\"parent: \" + @parent.to_s) + \", \" : \"\"}#{@local_variables}>\""}},{"html_id":"unwrap-instance-method","name":"unwrap","abstract":false,"location":{"filename":"src/cosmo/runtime/scope.cr","line_number":30,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/runtime/scope.cr#L30"},"def":{"name":"unwrap","visibility":"Public","body":"@parent.not_nil!"}}]},{"html_id":"Cosmo/Cosmo/Syntax","path":"Cosmo/Syntax.html","kind":"enum","full_name":"Cosmo::Syntax","name":"Syntax","abstract":false,"ancestors":[{"html_id":"Cosmo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"Cosmo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"Cosmo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":1,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L1"}],"repository_name":"Cosmo","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Identifier","name":"Identifier","value":"0"},{"id":"Integer","name":"Integer","value":"1"},{"id":"Float","name":"Float","value":"2"},{"id":"String","name":"String","value":"3"},{"id":"Char","name":"Char","value":"4"},{"id":"Boolean","name":"Boolean","value":"5"},{"id":"None","name":"None","value":"6"},{"id":"TypeDef","name":"TypeDef","value":"7"},{"id":"Plus","name":"Plus","value":"8"},{"id":"PlusEqual","name":"PlusEqual","value":"9"},{"id":"Minus","name":"Minus","value":"10"},{"id":"MinusEqual","name":"MinusEqual","value":"11"},{"id":"Star","name":"Star","value":"12"},{"id":"StarEqual","name":"StarEqual","value":"13"},{"id":"Slash","name":"Slash","value":"14"},{"id":"SlashEqual","name":"SlashEqual","value":"15"},{"id":"Carat","name":"Carat","value":"16"},{"id":"CaratEqual","name":"CaratEqual","value":"17"},{"id":"Percent","name":"Percent","value":"18"},{"id":"PercentEqual","name":"PercentEqual","value":"19"},{"id":"Less","name":"Less","value":"20"},{"id":"LessEqual","name":"LessEqual","value":"21"},{"id":"Greater","name":"Greater","value":"22"},{"id":"GreaterEqual","name":"GreaterEqual","value":"23"},{"id":"Equal","name":"Equal","value":"24"},{"id":"EqualEqual","name":"EqualEqual","value":"25"},{"id":"Bang","name":"Bang","value":"26"},{"id":"BangEqual","name":"BangEqual","value":"27"},{"id":"Ampersand","name":"Ampersand","value":"28"},{"id":"Pipe","name":"Pipe","value":"29"},{"id":"Question","name":"Question","value":"30"},{"id":"ColonColon","name":"ColonColon","value":"31"},{"id":"Colon","name":"Colon","value":"32"},{"id":"Dot","name":"Dot","value":"33"},{"id":"DotDot","name":"DotDot","value":"34"},{"id":"HyphenArrow","name":"HyphenArrow","value":"35"},{"id":"This","name":"This","value":"36"},{"id":"LBrace","name":"LBrace","value":"37"},{"id":"RBrace","name":"RBrace","value":"38"},{"id":"LBracket","name":"LBracket","value":"39"},{"id":"RBracket","name":"RBracket","value":"40"},{"id":"LParen","name":"LParen","value":"41"},{"id":"RParen","name":"RParen","value":"42"},{"id":"Comma","name":"Comma","value":"43"},{"id":"Hashtag","name":"Hashtag","value":"44"},{"id":"Function","name":"Function","value":"45"},{"id":"If","name":"If","value":"46"},{"id":"In","name":"In","value":"47"},{"id":"Of","name":"Of","value":"48"},{"id":"Else","name":"Else","value":"49"},{"id":"For","name":"For","value":"50"},{"id":"While","name":"While","value":"51"},{"id":"Global","name":"Global","value":"52"},{"id":"Constant","name":"Constant","value":"53"},{"id":"Break","name":"Break","value":"54"},{"id":"Next","name":"Next","value":"55"},{"id":"Match","name":"Match","value":"56"},{"id":"Return","name":"Return","value":"57"},{"id":"EOF","name":"EOF","value":"58"}],"namespace":{"html_id":"Cosmo/Cosmo","kind":"module","full_name":"Cosmo","name":"Cosmo"},"instance_methods":[{"html_id":"ampersand?-instance-method","name":"ampersand?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":10,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L10"},"def":{"name":"ampersand?","visibility":"Public","body":"self == Ampersand"}},{"html_id":"bang?-instance-method","name":"bang?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":9,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L9"},"def":{"name":"bang?","visibility":"Public","body":"self == Bang"}},{"html_id":"bang_equal?-instance-method","name":"bang_equal?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":9,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L9"},"def":{"name":"bang_equal?","visibility":"Public","body":"self == BangEqual"}},{"html_id":"boolean?-instance-method","name":"boolean?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":3,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L3"},"def":{"name":"boolean?","visibility":"Public","body":"self == Boolean"}},{"html_id":"break?-instance-method","name":"break?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":23,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L23"},"def":{"name":"break?","visibility":"Public","body":"self == Break"}},{"html_id":"carat?-instance-method","name":"carat?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":7,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L7"},"def":{"name":"carat?","visibility":"Public","body":"self == Carat"}},{"html_id":"carat_equal?-instance-method","name":"carat_equal?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":7,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L7"},"def":{"name":"carat_equal?","visibility":"Public","body":"self == CaratEqual"}},{"html_id":"char?-instance-method","name":"char?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":3,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L3"},"def":{"name":"char?","visibility":"Public","body":"self == Char"}},{"html_id":"colon?-instance-method","name":"colon?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":11,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L11"},"def":{"name":"colon?","visibility":"Public","body":"self == Colon"}},{"html_id":"colon_colon?-instance-method","name":"colon_colon?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":11,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L11"},"def":{"name":"colon_colon?","visibility":"Public","body":"self == ColonColon"}},{"html_id":"comma?-instance-method","name":"comma?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":13,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L13"},"def":{"name":"comma?","visibility":"Public","body":"self == Comma"}},{"html_id":"constant?-instance-method","name":"constant?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":22,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L22"},"def":{"name":"constant?","visibility":"Public","body":"self == Constant"}},{"html_id":"dot?-instance-method","name":"dot?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":11,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L11"},"def":{"name":"dot?","visibility":"Public","body":"self == Dot"}},{"html_id":"dot_dot?-instance-method","name":"dot_dot?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":11,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L11"},"def":{"name":"dot_dot?","visibility":"Public","body":"self == DotDot"}},{"html_id":"else?-instance-method","name":"else?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":18,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L18"},"def":{"name":"else?","visibility":"Public","body":"self == Else"}},{"html_id":"eof?-instance-method","name":"eof?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":27,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L27"},"def":{"name":"eof?","visibility":"Public","body":"self == EOF"}},{"html_id":"equal?-instance-method","name":"equal?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":9,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L9"},"def":{"name":"equal?","visibility":"Public","body":"self == Equal"}},{"html_id":"equal_equal?-instance-method","name":"equal_equal?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":9,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L9"},"def":{"name":"equal_equal?","visibility":"Public","body":"self == EqualEqual"}},{"html_id":"float?-instance-method","name":"float?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":3,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L3"},"def":{"name":"float?","visibility":"Public","body":"self == Float"}},{"html_id":"for?-instance-method","name":"for?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":19,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L19"},"def":{"name":"for?","visibility":"Public","body":"self == For"}},{"html_id":"function?-instance-method","name":"function?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":15,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L15"},"def":{"name":"function?","visibility":"Public","body":"self == Function"}},{"html_id":"global?-instance-method","name":"global?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":21,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L21"},"def":{"name":"global?","visibility":"Public","body":"self == Global"}},{"html_id":"greater?-instance-method","name":"greater?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":8,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L8"},"def":{"name":"greater?","visibility":"Public","body":"self == Greater"}},{"html_id":"greater_equal?-instance-method","name":"greater_equal?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":8,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L8"},"def":{"name":"greater_equal?","visibility":"Public","body":"self == GreaterEqual"}},{"html_id":"hashtag?-instance-method","name":"hashtag?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":14,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L14"},"def":{"name":"hashtag?","visibility":"Public","body":"self == Hashtag"}},{"html_id":"hyphen_arrow?-instance-method","name":"hyphen_arrow?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":11,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L11"},"def":{"name":"hyphen_arrow?","visibility":"Public","body":"self == HyphenArrow"}},{"html_id":"identifier?-instance-method","name":"identifier?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":2,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L2"},"def":{"name":"identifier?","visibility":"Public","body":"self == Identifier"}},{"html_id":"if?-instance-method","name":"if?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":16,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L16"},"def":{"name":"if?","visibility":"Public","body":"self == If"}},{"html_id":"in?-instance-method","name":"in?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":17,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L17"},"def":{"name":"in?","visibility":"Public","body":"self == In"}},{"html_id":"integer?-instance-method","name":"integer?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":3,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L3"},"def":{"name":"integer?","visibility":"Public","body":"self == Integer"}},{"html_id":"l_brace?-instance-method","name":"l_brace?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":12,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L12"},"def":{"name":"l_brace?","visibility":"Public","body":"self == LBrace"}},{"html_id":"l_bracket?-instance-method","name":"l_bracket?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":12,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L12"},"def":{"name":"l_bracket?","visibility":"Public","body":"self == LBracket"}},{"html_id":"l_paren?-instance-method","name":"l_paren?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":12,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L12"},"def":{"name":"l_paren?","visibility":"Public","body":"self == LParen"}},{"html_id":"less?-instance-method","name":"less?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":8,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L8"},"def":{"name":"less?","visibility":"Public","body":"self == Less"}},{"html_id":"less_equal?-instance-method","name":"less_equal?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":8,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L8"},"def":{"name":"less_equal?","visibility":"Public","body":"self == LessEqual"}},{"html_id":"match?-instance-method","name":"match?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":25,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L25"},"def":{"name":"match?","visibility":"Public","body":"self == Match"}},{"html_id":"minus?-instance-method","name":"minus?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":5,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L5"},"def":{"name":"minus?","visibility":"Public","body":"self == Minus"}},{"html_id":"minus_equal?-instance-method","name":"minus_equal?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":5,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L5"},"def":{"name":"minus_equal?","visibility":"Public","body":"self == MinusEqual"}},{"html_id":"next?-instance-method","name":"next?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":24,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L24"},"def":{"name":"next?","visibility":"Public","body":"self == Next"}},{"html_id":"none?-instance-method","name":"none?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":3,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L3"},"def":{"name":"none?","visibility":"Public","body":"self == None"}},{"html_id":"of?-instance-method","name":"of?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":17,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L17"},"def":{"name":"of?","visibility":"Public","body":"self == Of"}},{"html_id":"percent?-instance-method","name":"percent?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":7,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L7"},"def":{"name":"percent?","visibility":"Public","body":"self == Percent"}},{"html_id":"percent_equal?-instance-method","name":"percent_equal?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":7,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L7"},"def":{"name":"percent_equal?","visibility":"Public","body":"self == PercentEqual"}},{"html_id":"pipe?-instance-method","name":"pipe?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":10,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L10"},"def":{"name":"pipe?","visibility":"Public","body":"self == Pipe"}},{"html_id":"plus?-instance-method","name":"plus?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":5,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L5"},"def":{"name":"plus?","visibility":"Public","body":"self == Plus"}},{"html_id":"plus_equal?-instance-method","name":"plus_equal?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":5,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L5"},"def":{"name":"plus_equal?","visibility":"Public","body":"self == PlusEqual"}},{"html_id":"question?-instance-method","name":"question?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":10,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L10"},"def":{"name":"question?","visibility":"Public","body":"self == Question"}},{"html_id":"r_brace?-instance-method","name":"r_brace?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":12,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L12"},"def":{"name":"r_brace?","visibility":"Public","body":"self == RBrace"}},{"html_id":"r_bracket?-instance-method","name":"r_bracket?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":12,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L12"},"def":{"name":"r_bracket?","visibility":"Public","body":"self == RBracket"}},{"html_id":"r_paren?-instance-method","name":"r_paren?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":12,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L12"},"def":{"name":"r_paren?","visibility":"Public","body":"self == RParen"}},{"html_id":"return?-instance-method","name":"return?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":26,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L26"},"def":{"name":"return?","visibility":"Public","body":"self == Return"}},{"html_id":"slash?-instance-method","name":"slash?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":6,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L6"},"def":{"name":"slash?","visibility":"Public","body":"self == Slash"}},{"html_id":"slash_equal?-instance-method","name":"slash_equal?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":6,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L6"},"def":{"name":"slash_equal?","visibility":"Public","body":"self == SlashEqual"}},{"html_id":"star?-instance-method","name":"star?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":6,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L6"},"def":{"name":"star?","visibility":"Public","body":"self == Star"}},{"html_id":"star_equal?-instance-method","name":"star_equal?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":6,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L6"},"def":{"name":"star_equal?","visibility":"Public","body":"self == StarEqual"}},{"html_id":"string?-instance-method","name":"string?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":3,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L3"},"def":{"name":"string?","visibility":"Public","body":"self == String"}},{"html_id":"this?-instance-method","name":"this?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":11,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L11"},"def":{"name":"this?","visibility":"Public","body":"self == This"}},{"html_id":"type_def?-instance-method","name":"type_def?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":4,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L4"},"def":{"name":"type_def?","visibility":"Public","body":"self == TypeDef"}},{"html_id":"while?-instance-method","name":"while?","abstract":false,"location":{"filename":"src/cosmo/syntax/syntax_type.cr","line_number":20,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/syntax_type.cr#L20"},"def":{"name":"while?","visibility":"Public","body":"self == While"}}]},{"html_id":"Cosmo/Cosmo/Token","path":"Cosmo/Token.html","kind":"struct","full_name":"Cosmo::Token","name":"Token","abstract":false,"superclass":{"html_id":"Cosmo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"Cosmo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"Cosmo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"Cosmo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cosmo/syntax/lexer/token.cr","line_number":4,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/token.cr#L4"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"Cosmo/Cosmo","kind":"module","full_name":"Cosmo","name":"Cosmo"},"constructors":[{"html_id":"new(type:Cosmo::Syntax,value:Bool|Char|Float32|Float64|Int16|Int32|Int64|Int8|String|Nil,location:Cosmo::Location)-class-method","name":"new","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"::Cosmo::Syntax"},{"name":"value","external_name":"value","restriction":"::Bool | ::Char | ::Float32 | ::Float64 | ::Int16 | ::Int32 | ::Int64 | ::Int8 | ::String | ::Nil"},{"name":"location","external_name":"location","restriction":"::Cosmo::Location"}],"args_string":"(type : Cosmo::Syntax, value : Bool | Char | Float32 | Float64 | Int16 | Int32 | Int64 | Int8 | String | Nil, location : Cosmo::Location)","args_html":"(type : <a href=\"../Cosmo/Syntax.html\">Cosmo::Syntax</a>, value : Bool | Char | Float32 | Float64 | Int16 | Int32 | Int64 | Int8 | String | Nil, location : <a href=\"../Cosmo/Location.html\">Cosmo::Location</a>)","location":{"filename":"src/cosmo/syntax/lexer/token.cr","line_number":9,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/token.cr#L9"},"def":{"name":"new","args":[{"name":"type","external_name":"type","restriction":"::Cosmo::Syntax"},{"name":"value","external_name":"value","restriction":"::Bool | ::Char | ::Float32 | ::Float64 | ::Int16 | ::Int32 | ::Int64 | ::Int8 | ::String | ::Nil"},{"name":"location","external_name":"location","restriction":"::Cosmo::Location"}],"visibility":"Public","body":"_ = allocate\n_.initialize(type, value, location)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"location:Location-instance-method","name":"location","abstract":false,"location":{"filename":"src/cosmo/syntax/lexer/token.cr","line_number":7,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/token.cr#L7"},"def":{"name":"location","return_type":"Location","visibility":"Public","body":"@location"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a nicely readable and concise string representation of this object,\ntypically intended for users.\n\nThis method should usually **not** be overridden. It delegates to\n`#to_s(IO)` which can be overridden for custom implementations.\n\nAlso see `#inspect`.","summary":"<p>Returns a nicely readable and concise string representation of this object, typically intended for users.</p>","abstract":false,"location":{"filename":"src/cosmo/syntax/lexer/token.cr","line_number":29,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/token.cr#L29"},"def":{"name":"to_s","visibility":"Public","body":"\"Token<type: #{@type}, value: #{value_str}, location: [#{@location.to_s}]\""}},{"html_id":"type:Syntax-instance-method","name":"type","abstract":false,"location":{"filename":"src/cosmo/syntax/lexer/token.cr","line_number":5,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/token.cr#L5"},"def":{"name":"type","return_type":"Syntax","visibility":"Public","body":"@type"}},{"html_id":"value:LiteralType-instance-method","name":"value","abstract":false,"location":{"filename":"src/cosmo/syntax/lexer/token.cr","line_number":6,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer/token.cr#L6"},"def":{"name":"value","return_type":"LiteralType","visibility":"Public","body":"@value"}}]},{"html_id":"Cosmo/Cosmo/TypeChecker","path":"Cosmo/TypeChecker.html","kind":"module","full_name":"Cosmo::TypeChecker","name":"TypeChecker","abstract":false,"locations":[{"filename":"src/cosmo/runtime/typechecker.cr","line_number":3,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/runtime/typechecker.cr#L3"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"TYPE_MAP","name":"TYPE_MAP","value":"{Int64 => \"int\", Int32 => \"int\", Int16 => \"int\", Int8 => \"int\", Float64 => \"float\", Float32 => \"float\", String => \"string\", Char => \"char\", Bool => \"bool\"}"}],"extended_modules":[{"html_id":"Cosmo/Cosmo/TypeChecker","kind":"module","full_name":"Cosmo::TypeChecker","name":"TypeChecker"}],"namespace":{"html_id":"Cosmo/Cosmo","kind":"module","full_name":"Cosmo","name":"Cosmo"},"instance_methods":[{"html_id":"assert(typedef:String,value:LiteralType,token:Token)-instance-method","name":"assert","abstract":false,"args":[{"name":"typedef","external_name":"typedef","restriction":"String"},{"name":"value","external_name":"value","restriction":"LiteralType"},{"name":"token","external_name":"token","restriction":"Token"}],"args_string":"(typedef : String, value : LiteralType, token : Token)","args_html":"(typedef : String, value : <a href=\"../LiteralType.html\">LiteralType</a>, token : <a href=\"../Cosmo/Token.html\">Token</a>)","location":{"filename":"src/cosmo/runtime/typechecker.cr","line_number":23,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/runtime/typechecker.cr#L23"},"def":{"name":"assert","args":[{"name":"typedef","external_name":"typedef","restriction":"String"},{"name":"value","external_name":"value","restriction":"LiteralType"},{"name":"token","external_name":"token","restriction":"Token"}],"visibility":"Public","body":"case typedef\nwhen \"int\"\n  if value.is_a?(Int)\n  else\n    report_mismatch(typedef, value, token)\n  end\nwhen \"float\"\n  if value.is_a?(Float)\n  else\n    report_mismatch(typedef, value, token)\n  end\nwhen \"bool\"\n  if value.is_a?(Bool)\n  else\n    report_mismatch(typedef, value, token)\n  end\nwhen \"string\"\n  if value.is_a?(String)\n  else\n    report_mismatch(typedef, value, token)\n  end\nwhen \"char\"\n  if value.is_a?(Char)\n  else\n    report_mismatch(typedef, value, token)\n  end\nwhen \"none\"\n  if value == nil\n  else\n    report_mismatch(typedef, value, token)\n  end\nelse\n  raise(\"Unhandled type '#{typedef}' in TypeChecker\")\nend"}}]}]},{"html_id":"Cosmo/LiteralType","path":"LiteralType.html","kind":"alias","full_name":"LiteralType","name":"LiteralType","abstract":false,"locations":[{"filename":"src/cosmo/syntax/lexer.cr","line_number":4,"url":"https://github.com/R-unic/cosmo/blob/d08c3dda50965ee197efe1443c052265701b4973/src/cosmo/syntax/lexer.cr#L4"}],"repository_name":"Cosmo","program":false,"enum":false,"alias":true,"aliased":"(Bool | Char | Float32 | Float64 | Int16 | Int32 | Int64 | Int8 | String | Nil)","aliased_html":"Bool | Char | Float32 | Float64 | Int16 | Int32 | Int64 | Int8 | String | Nil","const":false}]}})