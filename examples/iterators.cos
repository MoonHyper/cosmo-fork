func fn doubled(const int[] nums) {
  int i = 0
  int? fn generator() {
    const int value = nums[i]
    ++i
    unless value == none
      value * 2
  }
  generator
}

any[] fn filter(any[] vec, func predicate) {
  any[] res = []
  every any e in vec
    if predicate(e)
      res << e

  res
}

func fn even(const int[] nums) {
  bool fn even?(int x) { x % 2 == 0 }
  const int[] even_nums = filter(nums, even?)
  int i = 0

  int? fn generator() {
    const int x = even_nums[i]
    ++i
    x
  }
  generator
}

## 2, 4, 6, 8
every int n in doubled([1, 2, 3, 4])
  puts(n)

puts("") ## newline

## 2, 4, 6
every int n in even([1, 2, 3, 4, 5, 6])
  puts(n)
