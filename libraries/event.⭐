public class Event {
  EventSubscription[] subscriptions = []

  public EventSubscription fn add$(Function callback) {
    EventSubscription sub = new EventSubscription($)
    subscriptions << sub
    sub
  }

  public void dispatch(any *args) {

  }

  public void fn remove_subscription(EventSubscription sub) {
    $->subscriptions->delete(sub)
  }
}

public class EventSubscription {
  Event parent

  public EventSubscription fn construct(Event parent) {
    $->parent = parent
  }

  public void fn unsubscribe {
    $->parent->remove_subscription($)
  }
}

Event event = new Event
event += &void